---
layout: post
title:  "Basic Git commands"
date:   Sun Dec  4 14:08:57 UTC 2016
categories: test
---

git init : create git repository in current folder

git add <file/folder> : add file or files in folder to stage

git commit -m "commentABC"  : commit/checkin with comment, the stage status been commited

git status: check status of the repository, it'll advise command to unstage file(for files staged:git add, git reset HEAD <file>); and command s to discard changes made to files not yet staged(git checkout --<file>)

git status: show file in stage and files modified but not staged, file will show twice if it's been modified after been staged(git add)

git log: view the history of the project. 
   git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
--pretty="..." defines the format of the output.
%h hash abbre
%d are any decorations on that commit (e.g. branch heads or tags)
%ad is the author date
%s is the comment
%an is the author name
--graph informs git to display the commit tree in an ASCII graph layout
--date=short keeps the date format nice and short

aliases
FILE: .gitconfig
[alias]
  co = checkout
  ci = commit
  st = status
  br = branch
  hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  type = cat-file -t
  dump = cat-file -p

git checkout: get previous version in to working dir

git checkout <branch/master/sha1 of a commit>

git tag : tag the commits with names  for future reference.

git tag v1.0

git checkout v1.0^    or git checkout v1.0~1   : means the first ancestor of v1.0


git revert HEAD: undo/revert the chagnes that been commited, after revert, therell be 2 commits in project history

git reset --hard <tag/sha1> : Danger!  remove the latest commits from a branch. the commits will not show in git log unless you use option '--all'

git tag -d <tagname> : remove the tag name, it'll be garbage collected if the commits been reset

git commit --amend -m "comment" : amend an existing commit, fix the file and commit with --amend

git mv file.txt folder/file.txt: move file with repository

git checkout -b branchName: create a local brand

git checkout master: switch between branches

git merge master: bring cheanges in master branch into current branch

